<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Machine Made PhD (Posts about generator function)</title><link>https://redwanhuq.github.io/</link><description></description><atom:link type="application/rss+xml" href="https://redwanhuq.github.io/categories/generator-function.xml" rel="self"></atom:link><language>en</language><lastBuildDate>Fri, 03 Mar 2017 16:37:43 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Iterables, iterators and generators, oh my! Part 2</title><link>https://redwanhuq.github.io/posts/understanding-generators/</link><dc:creator>Redwan Huq</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;In a &lt;a href="http://machinemadephd.com/posts/understanding-iterators/"&gt;previous post&lt;/a&gt;, we learned about iterators—one of the most powerful programming constructs. Our discussion divulged their role as a fundamental but hidden component of Python's &lt;code&gt;for&lt;/code&gt; loop, which led to a startling revelation regarding the &lt;code&gt;for&lt;/code&gt; loop itself (no spoilers here). We also discovered how to implement the iterator protocol to create our very own iterators, even constructing ones that represent infinite data structures. In this post, we'll build upon our knowledge and learn about more elegant and efficient means for producing iterators. However, if you're not comfortable with the iterator protocol and the inner workings of iterators, I &lt;em&gt;strongly&lt;/em&gt; recommend familiarizing yourself with &lt;a href="http://machinemadephd.com/posts/understanding-iterators/"&gt;Part 1&lt;/a&gt; first.
&lt;/p&gt;&lt;p&gt;&lt;a href="https://redwanhuq.github.io/posts/understanding-generators/"&gt;Read more…&lt;/a&gt; (9 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>generator</category><category>generator function</category><category>iterator</category><category>python</category><guid>https://redwanhuq.github.io/posts/understanding-generators/</guid><pubDate>Wed, 01 Mar 2017 16:00:00 GMT</pubDate></item></channel></rss>